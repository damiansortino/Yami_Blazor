#pragma checksum "C:\Users\agust\source\repos\LaymarClientSide\LaymarClientSide\Client\Pages\Tesoreria\VentasConTarjeta.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b13932277866ace054f799cc6617b6cc5821a334"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace LaymarClientSide.Client.Pages.Tesoreria
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#line 1 "C:\Users\agust\source\repos\LaymarClientSide\LaymarClientSide\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#line 2 "C:\Users\agust\source\repos\LaymarClientSide\LaymarClientSide\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#line 3 "C:\Users\agust\source\repos\LaymarClientSide\LaymarClientSide\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#line 4 "C:\Users\agust\source\repos\LaymarClientSide\LaymarClientSide\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#line 5 "C:\Users\agust\source\repos\LaymarClientSide\LaymarClientSide\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#line 6 "C:\Users\agust\source\repos\LaymarClientSide\LaymarClientSide\Client\_Imports.razor"
using LaymarClientSide.Client;

#line default
#line hidden
#line 7 "C:\Users\agust\source\repos\LaymarClientSide\LaymarClientSide\Client\_Imports.razor"
using LaymarClientSide.Client.Shared;

#line default
#line hidden
#line 9 "C:\Users\agust\source\repos\LaymarClientSide\LaymarClientSide\Client\_Imports.razor"
using LaymarClientSide.Client.Helpers;

#line default
#line hidden
#line 10 "C:\Users\agust\source\repos\LaymarClientSide\LaymarClientSide\Client\_Imports.razor"
using LaymarClientSide.Shared;

#line default
#line hidden
#line 11 "C:\Users\agust\source\repos\LaymarClientSide\LaymarClientSide\Client\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#line 12 "C:\Users\agust\source\repos\LaymarClientSide\LaymarClientSide\Client\_Imports.razor"
using OfficeOpenXml;

#line default
#line hidden
#line 13 "C:\Users\agust\source\repos\LaymarClientSide\LaymarClientSide\Client\_Imports.razor"
using OfficeOpenXml.Style;

#line default
#line hidden
#line 14 "C:\Users\agust\source\repos\LaymarClientSide\LaymarClientSide\Client\_Imports.razor"
using System.Drawing;

#line default
#line hidden
#line 1 "C:\Users\agust\source\repos\LaymarClientSide\LaymarClientSide\Client\Pages\Tesoreria\VentasConTarjeta.razor"
using LaymarClientSide.Shared.Entidades;

#line default
#line hidden
#line 4 "C:\Users\agust\source\repos\LaymarClientSide\LaymarClientSide\Client\Pages\Tesoreria\VentasConTarjeta.razor"
using LaymarClientSide.Shared.Dtos;

#line default
#line hidden
#line 5 "C:\Users\agust\source\repos\LaymarClientSide\LaymarClientSide\Client\Pages\Tesoreria\VentasConTarjeta.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#line 3 "C:\Users\agust\source\repos\LaymarClientSide\LaymarClientSide\Client\Pages\Tesoreria\VentasConTarjeta.razor"
           [Authorize(Roles = "Ventas, Admin")]

#line default
#line hidden
    [Microsoft.AspNetCore.Components.RouteAttribute("/VentasTarjeta")]
    public partial class VentasConTarjeta : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#line 110 "C:\Users\agust\source\repos\LaymarClientSide\LaymarClientSide\Client\Pages\Tesoreria\VentasConTarjeta.razor"
       
    public string cadenaBusqueda { get; set; }
    public string cadenafiltroBusqueda { get; set; } = String.Empty;
    public string criterioBusqueda { get; set; } = "Razon Social";
    public DateTime fechaDesde { get; set; } = DateTime.Now.AddHours(-3).Date;
    public DateTime fechaHasta { get; set; } = DateTime.Now.AddHours(-3).Date;
    public UserInfo user { get; set; }
    public List<FacturaDto> ventas { get; set; } = new List<FacturaDto>();
    public List<FacturaDto> ventasBuscadas { get; set; } = new List<FacturaDto>();
    public FacturaDto venta { get; set; } = new FacturaDto { comprobante = new Comprobante { personaJuridica = new Cliente(), sucursal = new Sucursal() }, detalles = new List<DetalleFactura>() };

    protected override async Task OnInitializedAsync()
    {

       


        await ListarVentas();



    }


    protected async Task ListarVentas()
    {
        ventas = await http.GetJsonAsync<List<FacturaDto>>($"/api/Comprobante/ListarVentasTarjeta/{fechaDesde.ToString("dd-MM-yyyy")}/{fechaHasta.ToString("dd-MM-yyyy")}");
        if (ventas.Count > 0)
        {
            venta = ventas.Last();
            cadenaBusqueda = Convert.ToString(venta.comprobante.codigo);
        }
        else
        {
            venta = new FacturaDto { comprobante = new Comprobante { personaJuridica = new Cliente(), sucursal = new Sucursal() }, detalles = new List<DetalleFactura>() };
            cadenaBusqueda = "";

        }
        ventasBuscadas = ventas;

    }



    protected async Task BuscarVenta(string codigo)
    {
        FacturaDto ventaEncontrada = null;
        try
        {
            ventaEncontrada = ventas.Where(x => x.comprobante.codigo == codigo).First();

        }
        catch (Exception)
        {

        }

        if (ventaEncontrada != null)
        {
            venta = ventaEncontrada;

        }
        else
        {
            cadenaBusqueda = Convert.ToString(venta.comprobante.codigo);
            await Alerta("top-end", "error", "Venta inexistente");

        }

    }




    protected void FiltrarVenta(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            if (cadenafiltroBusqueda != "" && cadenafiltroBusqueda != string.Empty)
            {
                try
                {
                    if (criterioBusqueda == "Codigo")
                    {
                        ventasBuscadas = ventas.Where(x => x.comprobante.codigo.ToString().ToLower().Contains(cadenafiltroBusqueda.ToLower())).ToList();
                    }
                    if (criterioBusqueda == "Razon Social")
                    {
                        ventasBuscadas = ventas.Where(x => x.comprobante.personaJuridica.razonSocial.ToLower().Contains(cadenafiltroBusqueda.ToLower())).ToList();
                    }

                }
                catch (Exception)
                {


                }

            }
            else { ventasBuscadas = ventas; }
        }
    }


    public async Task Alerta(string posicion = "top-end", string icono = "success", string mensaje = "Se creó el producto con éxito")
    {
        await js.InvokeAsync<object>("alerta", posicion, icono, mensaje);
    }

    public async Task ModalToggle()
    {
        await js.InvokeAsync<object>("ModalToggle");
    }




#line default
#line hidden
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime js { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AuthenticationStateProvider AuthenticationStateProvider { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient http { get; set; }
    }
}
#pragma warning restore 1591
