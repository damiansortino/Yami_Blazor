#pragma checksum "C:\Users\DAMIAN\Desktop\LAYMAR_200521\LaymarClientSide\Client\Pages\Configuracion\ProductoComponent.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4a9490a02304a73d9a247fc33e61b4da58d0b0f8"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace LaymarClientSide.Client.Pages.Configuracion
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#line 1 "C:\Users\DAMIAN\Desktop\LAYMAR_200521\LaymarClientSide\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#line 2 "C:\Users\DAMIAN\Desktop\LAYMAR_200521\LaymarClientSide\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#line 3 "C:\Users\DAMIAN\Desktop\LAYMAR_200521\LaymarClientSide\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#line 4 "C:\Users\DAMIAN\Desktop\LAYMAR_200521\LaymarClientSide\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#line 5 "C:\Users\DAMIAN\Desktop\LAYMAR_200521\LaymarClientSide\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#line 6 "C:\Users\DAMIAN\Desktop\LAYMAR_200521\LaymarClientSide\Client\_Imports.razor"
using LaymarClientSide.Client;

#line default
#line hidden
#line 7 "C:\Users\DAMIAN\Desktop\LAYMAR_200521\LaymarClientSide\Client\_Imports.razor"
using LaymarClientSide.Client.Shared;

#line default
#line hidden
#line 8 "C:\Users\DAMIAN\Desktop\LAYMAR_200521\LaymarClientSide\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#line 9 "C:\Users\DAMIAN\Desktop\LAYMAR_200521\LaymarClientSide\Client\_Imports.razor"
using LaymarClientSide.Client.Helpers;

#line default
#line hidden
#line 10 "C:\Users\DAMIAN\Desktop\LAYMAR_200521\LaymarClientSide\Client\_Imports.razor"
using LaymarClientSide.Shared;

#line default
#line hidden
#line 11 "C:\Users\DAMIAN\Desktop\LAYMAR_200521\LaymarClientSide\Client\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#line 12 "C:\Users\DAMIAN\Desktop\LAYMAR_200521\LaymarClientSide\Client\_Imports.razor"
using OfficeOpenXml;

#line default
#line hidden
#line 13 "C:\Users\DAMIAN\Desktop\LAYMAR_200521\LaymarClientSide\Client\_Imports.razor"
using OfficeOpenXml.Style;

#line default
#line hidden
#line 14 "C:\Users\DAMIAN\Desktop\LAYMAR_200521\LaymarClientSide\Client\_Imports.razor"
using System.Drawing;

#line default
#line hidden
#line 1 "C:\Users\DAMIAN\Desktop\LAYMAR_200521\LaymarClientSide\Client\Pages\Configuracion\ProductoComponent.razor"
using LaymarClientSide.Shared.Entidades;

#line default
#line hidden
#line 2 "C:\Users\DAMIAN\Desktop\LAYMAR_200521\LaymarClientSide\Client\Pages\Configuracion\ProductoComponent.razor"
using LaymarClientSide.Shared.Dtos;

#line default
#line hidden
#line 3 "C:\Users\DAMIAN\Desktop\LAYMAR_200521\LaymarClientSide\Client\Pages\Configuracion\ProductoComponent.razor"
           [Authorize(Roles = "Admin, Ventas")]

#line default
#line hidden
    [Microsoft.AspNetCore.Components.RouteAttribute("/producto")]
    public partial class ProductoComponent : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#line 379 "C:\Users\DAMIAN\Desktop\LAYMAR_200521\LaymarClientSide\Client\Pages\Configuracion\ProductoComponent.razor"
       
    public bool valido { get; set; } = true;
    public string cadenaBusqueda { get; set; }
    public string cadenafiltroBusqueda { get; set; } = String.Empty;
    public string criterioBusqueda { get; set; } = "Nombre";
    string barcode = "";
    string barcode_text = "";
    public string AccionSobreProducto { get; set; } = "Detalles";
    public Producto producto { get; set; } = new Producto { proveedor = new Proveedor() };
    public List<Producto> productos { get; set; } = new List<Producto>();
    public List<Sucursal> sucursales { get; set; } = new List<Sucursal>();
    public List<Stock> stocks { get; set; } = new List<Stock>();
    public List<Proveedor> proveedores { get; set; } = new List<Proveedor>();
    public List<Producto> productosBuscados { get; set; } = new List<Producto>();

    public ProductoDto productoDto { get; set; } = new ProductoDto();

    protected override async Task OnInitializedAsync()
    {

       
        await ListarProductos();
        await ListarProveedores();
        await ListarSucursales();




    }
    protected async Task ListarProductos()
    {

        productos = await http.GetJsonAsync<List<Producto>>("/api/Producto/Listar");
        if (productos.Count > 0)
        {
            await BuscarProducto(productos.Last().ProductoId);
            cadenaBusqueda = Convert.ToString(producto.ProductoId);
        }
        else
        {
            producto = new Producto { proveedor = new Proveedor() };
        }
    }

    protected async Task ListarSucursales()
    {
        sucursales = await http.GetJsonAsync<List<Sucursal>>("/api/Sucursal/Listar");
    }

    protected async Task ListarProveedores()
    {
        proveedores = await http.GetJsonAsync<List<Proveedor>>("/api/Proveedor/Listar");
        proveedores = proveedores.Where(x => x.fechaBaja == null).ToList();
    }

    protected async Task BuscarProducto(int codigo)
    {
        Producto productoEncontrado = null;
        AccionSobreProducto = "Detalles";
        try
        {
            productoEncontrado = productos.Where(x => x.ProductoId == codigo).First();

        }
        catch (Exception)
        {

        }

        if (productoEncontrado != null)
        {
            producto = productoEncontrado;

            stocks = await http.GetJsonAsync<List<Stock>>($"/api/Stock/ListarPorProducto/{producto.ProductoId}");
            if (producto.fechaBaja != null)
            {
                valido = false;
            }
            else { valido = true; }
        }
        else
        {
            cadenaBusqueda = Convert.ToString(producto.ProductoId);
            await Alerta("top-end", "error", "Producto inexistente");

        }

    }

    protected async Task GuardarProducto()
    {
        if (producto.proveedor == null)
        {
            await Alerta("top-end", "error", "Tienes que elegir un proveedor");

        }
        else if (false) { }
        else
        {
            

#line default
#line hidden
#line 478 "C:\Users\DAMIAN\Desktop\LAYMAR_200521\LaymarClientSide\Client\Pages\Configuracion\ProductoComponent.razor"
             if (AccionSobreProducto == "Crear")
            {
                productoDto.producto = producto;
                productoDto.stocks = stocks;
                await http.PostJsonAsync("/api/Producto/Crear", productoDto);
                await DeshabilitarFormulario();

                await Alerta("top-end", "success", "Se creó con éxito");
                cadenaBusqueda = Convert.ToString(producto.ProductoId);

            }

#line default
#line hidden
#line 489 "C:\Users\DAMIAN\Desktop\LAYMAR_200521\LaymarClientSide\Client\Pages\Configuracion\ProductoComponent.razor"
             if (AccionSobreProducto == "Editar")
            {

                await http.PutJsonAsync($"/api/Producto/Editar/{producto.ProductoId}", producto);
                await DeshabilitarFormulario();
                await Alerta("top-end", "success", "Se editó con éxito");

            }

#line default
#line hidden
#line 496 "C:\Users\DAMIAN\Desktop\LAYMAR_200521\LaymarClientSide\Client\Pages\Configuracion\ProductoComponent.razor"
             
            AccionSobreProducto = "Detalle";
            AccionSobreProducto = "Detalle";
            await ListarProductos();
        }
    }

    protected async Task CrearProducto()
    {
        AccionSobreProducto = "Crear";
        producto = new Producto();

        stocks = new List<Stock>();

        foreach (Sucursal sucursal in sucursales)
        {
            stocks.Add(new Stock { sucursal = sucursal, cantidad = 0 });
        }


        valido = false;
        await HabilitarFormulario();

    }
    protected async Task AnularProducto()
    {
        await http.DeleteAsync($"/api/Producto/Anular/{producto.ProductoId}");
        if (productos.Count > 0)
        {

            await ListarProductos();

        }
        else
        {
            producto = new Producto { proveedor = new Proveedor() };
        }
    }

    protected void FiltrarProducto(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            if (cadenafiltroBusqueda != "" && cadenafiltroBusqueda != string.Empty)
            {
                try
                {
                    if (criterioBusqueda == "Codigo")
                    {
                        productosBuscados = productos.Where(x => x.ProductoId.ToString().ToLower().Contains(cadenafiltroBusqueda.ToLower())).ToList();
                    }
                    if (criterioBusqueda == "Nombre")
                    {
                        productosBuscados = productos.Where(x => x.nombre.ToLower().Contains(cadenafiltroBusqueda.ToLower())).ToList();
                    }

                    if (criterioBusqueda == "Proveedor")
                    {
                        productosBuscados = productos.Where(x => x.proveedor.razonSocial.ToLower().Contains(cadenafiltroBusqueda.ToLower())).ToList();
                    }

                }
                catch (Exception)
                {


                }

            }
            else { productosBuscados = productos; }
        }
    }
    public void ChangeProveedor(ChangeEventArgs e)
    {
        producto.proveedor = proveedores.Where(x => x.PersonaJuridicaId == Convert.ToInt32(e.Value.ToString())).First();
        producto.porcentajeRentabilidad = producto.proveedor.porcentajeRentabilidad;
    }
    public async Task HabilitarFormulario()
    {
        await js.InvokeAsync<object>("EnabledFieldFormulario");
    }
    public async Task DeshabilitarFormulario()
    {
        await js.InvokeAsync<object>("DisabledFieldFormulario");
    }

    public async Task Alerta(string posicion = "top-end", string icono = "success", string mensaje = "Se creó el producto con éxito")
    {
        await js.InvokeAsync<object>("alerta", posicion, icono, mensaje);
    }

    public async Task ModalToggle()
    {
        await js.InvokeAsync<object>("ModalToggle");
    }
    public async Task ModalConfirmToggle()
    {
        await js.InvokeAsync<object>("ModalConfirmToggle");
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime js { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient http { get; set; }
    }
}
#pragma warning restore 1591
